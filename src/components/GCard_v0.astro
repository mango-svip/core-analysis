---
export interface Item {
    term: string,
    zxj: string,
    yield: string,
    lockDays: string,
    availableDay: string
}

export interface Props {
	item: Item,
  buyAmount: number
}

const { item, buyAmount, items, profit } = Astro.props;

const rateMap = {
    '1':   0.00001,
    '2':   0.00002,
    '3':   0.00003,
    '4':   0.00004,
    '7':   0.00005,
    '14':  0.00010,
    '28':  0.00020,
    '91':  0.00030,
    '182': 0.00030
}

const fee = (buyAmount * Number(rateMap[item.term]))
const earnings = (buyAmount * Number(item.zxj) * Number(item.lockDays)/100/365) - fee


const profitIndex = profit || 0.45; 
const ttbEarning = item.lockDays * profitIndex * buyAmount / 10000
const diff = (earnings - ttbEarning )

// const mixEarnings = (maxIncomeItem.maxIncome * maxIncomeItem.item.lockDays * buyAmount / 10000 + (item.lockDays - maxIncomeItem.item.lockDays) * profitIndex * buyAmount / 10000 ).toFixed(2)


---

<div class="mt-4 px-4 space-y-2" data-key=gc>
  <div
    class="bg-white rounded-lg p-4 card-shadow hover:shadow-lg transition-shadow duration-200"
  >
    <div class="flex items-center justify-between">
      <div class="flex items-center gap-2">
        <span class="text-lg font-medium text-gray-900">{item.term}天期</span>
        {
          item.bestOnGivenDay && 
        <span class="text-xs px-2 py-0.5 
              bg-primary/10 text-primary rounded border 
              border-primary/30 
              shadow-[0_0_8px_rgba(255,77,79,0.2)]"> 推荐
        </span>
        }
      </div>
      <span class="text-sm text-gray-500">{item.availableDay}</span>
    </div>
    <div class="mt-4 flex justify-between items-center">
      <div>
        <div class="text-xl font-medium text-primary">{item.yield}</div>
        <div class="text-sm text-gray-500 mt-1">每10万收益(元)</div>
      </div>
      <div class="text-right">
        <div class="text-2xl font-medium text-primary">{item.zxj}%</div>
        <div class="text-sm text-gray-500 mt-1">年化收益率</div>
      </div>
    </div>
    <div
      class="mt-4 pt-4 border-t border-gray-100 grid grid-cols-2 gap-4"
    >
      <div class="space-y-2">
        <div class="flex justify-between text-sm">
          <span class="text-gray-500">资金锁定天数</span>
          <span class="text-gray-900" data-key=lockDays >{item.lockDays}天</span>
        </div>
        <div class="flex justify-between text-sm">
          <span class="text-gray-500">手续费</span>
          <span class="text-gray-900">{ fee.toFixed(3) }</span>
        </div>
        <div class="flex justify-between text-sm">
          <span class="text-gray-500">每万元每日收益</span>
          <span class="text-primary"  data-key=incomePerThousand>{( earnings / item.lockDays / buyAmount * 10000).toFixed(4) }</span>
        </div>
      </div>
      <div class="space-y-2">
        <div class="flex justify-between text-sm">
          <span class="text-gray-900">最终收益</span>
          <span class="text-primary">{earnings.toFixed(2)}</span>
        </div>
        <div class="flex justify-between text-sm">
          <span class="text-gray-500">天天宝收益({profitIndex}元/万元)</span>
          <span class="text-gray-900">{ ttbEarning.toFixed(2)}</span>
          <span class="text-secondary"> { (diff > 0 ? "+": "-" ) + Math.abs(diff.toFixed(2)) }</span>
        </div>
        <div class="flex justify-between text-sm">
          <span class="text-gray-500">混合收益</span>
          <div class="grid grid-cols-2 gap-x-4">
          {
              items.map(data => {
                let remainDays = item.lockDays - data.lockDays;
                if(remainDays > 0) {
                  let singleEarnings = (buyAmount * Number(data.zxj) * Number(data.lockDays)/100/365) - (buyAmount * Number(rateMap[data.term]));
                  let mixEarnings = (Number(singleEarnings) + remainDays * profitIndex * buyAmount / 10000 ).toFixed(2);
                  return (
                    <div class="text-sm">
                      {data.term + "天期 + " + (remainDays) + ' 天天宝'}
                    </div>
                    <div class={ earnings > mixEarnings ? "text-green-500" : "text-red-500" }>
                      { mixEarnings }
                    </div>
                  )
                
                }

              })
            
          }
          </div>
        </div>
      </div>
    </div>
  </div>
</div>



<style>
        :where([class^="ri-"])::before { content: "\f3c2"; }
      .card-shadow {
      box-shadow: 0 4px 16px rgba(0,0,0,0.08);
      border: 1px solid rgba(0,0,0,0.05);
      }
</style>

<script>
  document.querySelectorAll(".card-shadow").forEach((card) => {
        card.addEventListener("click", () => {
          card.style.opacity = "0.8";
          setTimeout(() => (card.style.opacity = "1"), 200);
        });
      });
</script>