---
import Content from '../components/Content.astro';
import Layout from '../layouts/Layout.astro';
// import Card from '../components/Card.astro';
const formatter = new Intl.DateTimeFormat('zh', {
  year: 'numeric',
  month: '2-digit',
  day: '2-digit'
});
const {date} = Astro.params || formatter.format(new Date()).replaceAll("/", "-");
console.log(date)
const response = await fetch("https://kwcrssftu2.execute-api.ap-southeast-1.amazonaws.com/default/core-analysis?date=" +  date );
const data = await response.json();
console.log(data)
---

<Layout title={data.Status == 0 ? data.Result.articleTitle : data.Message}>
	<main>
		<Content data={data} date={date || ""}/>
	</main>
</Layout>

<style>
	main {
		margin: auto;
		padding: 1.5rem;
		max-width: 60ch;
	}
	h1 {
		font-size: 3rem;
		font-weight: 800;
		margin: 0;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		line-height: 1.6;
		margin: 1rem 0;
		border: 1px solid rgba(var(--accent), 25%);
		background-color: white;
		padding: 1rem;
		border-radius: 0.4rem;
	}
	.instructions code {
		font-size: 0.875em;
		font-weight: bold;
		background: rgba(var(--accent), 12%);
		color: rgb(var(--accent));
		border-radius: 4px;
		padding: 0.3em 0.45em;
	}
	.instructions strong {
		color: rgb(var(--accent));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 1rem;
		padding: 0;
	}
</style>
