---
import Layout from "../layouts/Layout.astro";

interface RepoItem {
    term: string;
    zxj: string;
    yield: string;
    lockDays: string;
    availableDay: string;
    bestOnGivenDay?: boolean;
}

interface ApiResponse {
    code: number;
    data: {
        data: {
            sz: RepoItem[];
            sh: RepoItem[];
        };
        bestOnGivenDay: {
            sc: string;
            term: string;
        };
    };
}

const url = 'https://proxy.finance.qq.com/ifzqgtimg/appstock/app/ReverseRepo/get?app=wzq';
const response = await fetch(url);
const json: ApiResponse = await response.json();
const isError = json == null || json.code !== 0;

if (isError) {
    throw new Error('数据获取失败');
}

const data = json.data.data;
const bestOnGivenDay = json.data.bestOnGivenDay;
const szData = data.sz;
const shData = data.sh;

const requestUrl = new URL(Astro.request.url);
const buyAmountParam = requestUrl.searchParams.get('buyAmount');
const buyAmount = buyAmountParam ? parseFloat(buyAmountParam) : 10;
const profitParam = requestUrl.searchParams.get('profit');
const profit = profitParam ? parseFloat(profitParam) : 0.45;

const rateMap: Record<string, number> = {
    '1': 0.00001,
    '2': 0.00002,
    '3': 0.00003,
    '4': 0.00004,
    '7': 0.00005,
    '14': 0.00010,
    '28': 0.00020,
    '91': 0.00030,
    '182': 0.00030
};

// 计算收益的函数
function calculateEarnings(item: RepoItem, amount: number) {
    const fee = amount * 10000 * (rateMap[item.term] || 0);
    const grossEarnings = amount * 10000 * parseFloat(item.zxj) * parseInt(item.lockDays) / 100 / 365;
    const netEarnings = grossEarnings - fee;
    const dailyReturn = netEarnings / parseInt(item.lockDays);
    const dailyReturnPer10k = dailyReturn / (amount * 10000) * 10000;
    
    return {
        fee,
        grossEarnings,
        netEarnings,
        dailyReturn,
        dailyReturnPer10k
    };
}

// 为数据添加最佳推荐标记和计算收益
const processedShData = shData.map((item: RepoItem) => {
    const earnings = calculateEarnings(item, buyAmount);
    return {
        ...item,
        bestOnGivenDay: bestOnGivenDay.sc === 'sh' && bestOnGivenDay.term === item.term,
        earnings
    };
});

const processedSzData = szData.map((item: RepoItem) => {
    const earnings = calculateEarnings(item, buyAmount);
    return {
        ...item,
        bestOnGivenDay: bestOnGivenDay.sc === 'sz' && bestOnGivenDay.term === item.term,
        earnings
    };
});

// 找出最佳收益选项
const allData = [...processedShData, ...processedSzData];
const bestOption = allData.reduce((best, current) => 
    current.earnings.dailyReturnPer10k > best.earnings.dailyReturnPer10k ? current : best
);

---

<Layout title="国债逆回购">
    <div class="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100">
        <div class="container mx-auto px-4 py-8 max-w-4xl">
            <!-- 页面标题 -->
            <div class="text-center mb-8">
                <h1 class="text-3xl font-bold text-gray-800 mb-2">国债逆回购收益计算器</h1>
                <p class="text-gray-600">智能分析最佳投资方案</p>
            </div>

            <!-- 最佳推荐卡片 -->
            <div class="bg-gradient-to-r from-green-400 to-blue-500 rounded-2xl p-6 mb-8 text-white shadow-xl">
                <div class="flex items-center justify-between">
                    <div>
                        <h2 class="text-xl font-bold mb-2">🏆 今日最佳选择</h2>
                        <div class="text-lg">
                            <span class="font-semibold">{bestOption.term}天期</span>
                            <span class="mx-2">•</span>
                            <span>{bestOption.zxj}% 年化收益率</span>
                        </div>
                        <div class="text-sm opacity-90 mt-1">
                            每万元日收益: ¥{bestOption.earnings.dailyReturnPer10k.toFixed(4)}
                        </div>
                    </div>
                    <div class="text-right">
                        <div class="text-2xl font-bold">¥{bestOption.earnings.netEarnings.toFixed(2)}</div>
                        <div class="text-sm opacity-90">预期总收益</div>
                    </div>
                </div>
            </div>

            <!-- 控制面板 -->
            <div class="bg-white rounded-2xl shadow-lg p-6 mb-8">
                <div class="grid grid-cols-1 md:grid-cols-3 gap-6 items-center">
                    <!-- 购买金额输入 -->
                    <div class="flex items-center space-x-3">
                        <div class="flex-shrink-0">
                            <div class="w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center">
                                <svg class="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"></path>
                                </svg>
                            </div>
                        </div>
                        <div class="flex-1">
                            <label class="block text-sm font-medium text-gray-700 mb-1">购买金额</label>
                            <div class="flex items-center">
                                <input 
                                    type="number" 
                                    id="buyAmount" 
                                    value={buyAmount}
                                    class="flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                                    placeholder="输入金额"
                                />
                                <span class="ml-2 text-gray-600">万元</span>
                            </div>
                        </div>
                    </div>

                    <!-- 排序选择 -->
                    <div class="flex items-center justify-center">
                        <div class="bg-gray-100 p-1 rounded-xl inline-flex">
                            <button
                                class="px-4 py-2 rounded-lg text-sm font-medium transition-all duration-200 bg-blue-500 text-white shadow-sm" 
                                id="sortToggleByReturn"
                            >
                                按收益排序
                            </button>
                            <button 
                                class="px-4 py-2 rounded-lg text-sm font-medium transition-all duration-200 text-gray-600 hover:text-gray-800" 
                                id="sortToggleByLock"
                            >
                                按期限排序
                            </button>
                        </div>
                    </div>

                    <!-- 市场选择 -->
                    <div class="flex items-center justify-center">
                        <div class="bg-gray-100 p-1 rounded-xl inline-flex">
                            <button
                                class="px-6 py-2 rounded-lg text-sm font-medium transition-all duration-200 bg-red-500 text-white shadow-sm" 
                                id="marketSH"
                            >
                                沪市
                            </button>
                            <button 
                                class="px-6 py-2 rounded-lg text-sm font-medium transition-all duration-200 text-gray-600 hover:text-gray-800" 
                                id="marketSZ"
                            >
                                深市
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- 数据列表 -->
            <div id="shContainer" class="space-y-4">
                {processedShData.map((item) => (
                    <div class="bg-white rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 overflow-hidden" data-key="gc">
                        <div class="p-6">
                            <div class="flex items-center justify-between mb-4">
                                <div class="flex items-center space-x-3">
                                    <div class="w-12 h-12 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-white font-bold">
                                        {item.term}
                                    </div>
                                    <div>
                                        <h3 class="text-lg font-semibold text-gray-800">{item.term}天期</h3>
                                        <p class="text-sm text-gray-500">{item.availableDay}</p>
                                    </div>
                                    {item.bestOnGivenDay && (
                                        <span class="px-3 py-1 bg-gradient-to-r from-yellow-400 to-orange-500 text-white text-xs font-bold rounded-full shadow-lg">
                                            官方推荐
                                        </span>
                                    )}
                                    {item === bestOption && (
                                        <span class="px-3 py-1 bg-gradient-to-r from-green-400 to-blue-500 text-white text-xs font-bold rounded-full shadow-lg">
                                            最佳收益
                                        </span>
                                    )}
                                </div>
                                <div class="text-right">
                                    <div class="text-2xl font-bold text-blue-600">{item.zxj}%</div>
                                    <div class="text-sm text-gray-500">年化收益率</div>
                                </div>
                            </div>

                            <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
                                <div class="bg-gray-50 rounded-lg p-3">
                                    <div class="text-sm text-gray-500 mb-1">锁定天数</div>
                                    <div class="text-lg font-semibold text-gray-800" data-key="lockDays">{item.lockDays}天</div>
                                </div>
                                <div class="bg-gray-50 rounded-lg p-3">
                                    <div class="text-sm text-gray-500 mb-1">手续费</div>
                                    <div class="text-lg font-semibold text-gray-800">¥{item.earnings.fee.toFixed(2)}</div>
                                </div>
                                <div class="bg-gray-50 rounded-lg p-3">
                                    <div class="text-sm text-gray-500 mb-1">总收益</div>
                                    <div class="text-lg font-semibold text-green-600">¥{item.earnings.netEarnings.toFixed(2)}</div>
                                </div>
                                <div class="bg-gray-50 rounded-lg p-3">
                                    <div class="text-sm text-gray-500 mb-1">万元日收益</div>
                                    <div class="text-lg font-semibold text-blue-600" data-key="dailyReturn">¥{item.earnings.dailyReturnPer10k.toFixed(4)}</div>
                                </div>
                            </div>

                            <!-- 收益对比 -->
                            <div class="mt-4 pt-4 border-t border-gray-200">
                                <div class="flex items-center justify-between text-sm">
                                    <span class="text-gray-600">vs 天天宝({profit}元/万元/日)</span>
                                    <div class="flex items-center space-x-2">
                                        <span class="text-gray-600">差额:</span>
                                        {(() => {
                                            const ttbTotal = parseInt(item.lockDays) * profit * buyAmount;
                                            const diff = item.earnings.netEarnings - ttbTotal;
                                            return (
                                                <span class={`font-semibold ${diff >= 0 ? 'text-green-600' : 'text-red-600'}`}>
                                                    {diff >= 0 ? '+' : ''}¥{diff.toFixed(2)}
                                                </span>
                                            );
                                        })()}
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                ))}
            </div>

            <div id="szContainer" class="space-y-4 hidden">
                {processedSzData.map((item) => (
                    <div class="bg-white rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 overflow-hidden" data-key="gc">
                        <div class="p-6">
                            <div class="flex items-center justify-between mb-4">
                                <div class="flex items-center space-x-3">
                                    <div class="w-12 h-12 bg-gradient-to-r from-green-500 to-teal-600 rounded-full flex items-center justify-center text-white font-bold">
                                        {item.term}
                                    </div>
                                    <div>
                                        <h3 class="text-lg font-semibold text-gray-800">{item.term}天期</h3>
                                        <p class="text-sm text-gray-500">{item.availableDay}</p>
                                    </div>
                                    {item.bestOnGivenDay && (
                                        <span class="px-3 py-1 bg-gradient-to-r from-yellow-400 to-orange-500 text-white text-xs font-bold rounded-full shadow-lg">
                                            官方推荐
                                        </span>
                                    )}
                                    {item === bestOption && (
                                        <span class="px-3 py-1 bg-gradient-to-r from-green-400 to-blue-500 text-white text-xs font-bold rounded-full shadow-lg">
                                            最佳收益
                                        </span>
                                    )}
                                </div>
                                <div class="text-right">
                                    <div class="text-2xl font-bold text-green-600">{item.zxj}%</div>
                                    <div class="text-sm text-gray-500">年化收益率</div>
                                </div>
                            </div>

                            <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
                                <div class="bg-gray-50 rounded-lg p-3">
                                    <div class="text-sm text-gray-500 mb-1">锁定天数</div>
                                    <div class="text-lg font-semibold text-gray-800" data-key="lockDays">{item.lockDays}天</div>
                                </div>
                                <div class="bg-gray-50 rounded-lg p-3">
                                    <div class="text-sm text-gray-500 mb-1">手续费</div>
                                    <div class="text-lg font-semibold text-gray-800">¥{item.earnings.fee.toFixed(2)}</div>
                                </div>
                                <div class="bg-gray-50 rounded-lg p-3">
                                    <div class="text-sm text-gray-500 mb-1">总收益</div>
                                    <div class="text-lg font-semibold text-green-600">¥{item.earnings.netEarnings.toFixed(2)}</div>
                                </div>
                                <div class="bg-gray-50 rounded-lg p-3">
                                    <div class="text-sm text-gray-500 mb-1">万元日收益</div>
                                    <div class="text-lg font-semibold text-green-600" data-key="dailyReturn">¥{item.earnings.dailyReturnPer10k.toFixed(4)}</div>
                                </div>
                            </div>

                            <!-- 收益对比 -->
                            <div class="mt-4 pt-4 border-t border-gray-200">
                                <div class="flex items-center justify-between text-sm">
                                    <span class="text-gray-600">vs 天天宝({profit}元/万元/日)</span>
                                    <div class="flex items-center space-x-2">
                                        <span class="text-gray-600">差额:</span>
                                        {(() => {
                                            const ttbTotal = parseInt(item.lockDays) * profit * buyAmount;
                                            const diff = item.earnings.netEarnings - ttbTotal;
                                            return (
                                                <span class={`font-semibold ${diff >= 0 ? 'text-green-600' : 'text-red-600'}`}>
                                                    {diff >= 0 ? '+' : ''}¥{diff.toFixed(2)}
                                                </span>
                                            );
                                        })()}
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                ))}
            </div>
        </div>
    </div>
</Layout>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // 市场切换功能
    const marketSH = document.getElementById('marketSH');
    const marketSZ = document.getElementById('marketSZ');
    const shContainer = document.getElementById('shContainer');
    const szContainer = document.getElementById('szContainer');

    marketSH?.addEventListener('click', function() {
        // 更新按钮样式
        marketSH.classList.add('bg-red-500', 'text-white', 'shadow-sm');
        marketSH.classList.remove('text-gray-600', 'hover:text-gray-800');
        marketSZ?.classList.remove('bg-red-500', 'text-white', 'shadow-sm');
        marketSZ?.classList.add('text-gray-600', 'hover:text-gray-800');
        
        // 切换容器显示
        shContainer?.classList.remove('hidden');
        szContainer?.classList.add('hidden');
    });

    marketSZ?.addEventListener('click', function() {
        // 更新按钮样式
        marketSZ.classList.add('bg-red-500', 'text-white', 'shadow-sm');
        marketSZ.classList.remove('text-gray-600', 'hover:text-gray-800');
        marketSH?.classList.remove('bg-red-500', 'text-white', 'shadow-sm');
        marketSH?.classList.add('text-gray-600', 'hover:text-gray-800');
        
        // 切换容器显示
        szContainer?.classList.remove('hidden');
        shContainer?.classList.add('hidden');
    });

    // 排序功能
    const sortByReturn = document.getElementById('sortToggleByReturn');
    const sortByLock = document.getElementById('sortToggleByLock');

    function sortItems(sortBy) {
        const activeContainer = shContainer?.classList.contains('hidden') ? szContainer : shContainer;
        if (!activeContainer) return;

        const items = Array.from(activeContainer.querySelectorAll('[data-key="gc"]'));
        
        items.sort((a, b) => {
            if (sortBy === 'return') {
                const aReturn = parseFloat(a.querySelector('[data-key="dailyReturn"]')?.textContent?.replace(/[¥,]/g, '') || '0');
                const bReturn = parseFloat(b.querySelector('[data-key="dailyReturn"]')?.textContent?.replace(/[¥,]/g, '') || '0');
                return bReturn - aReturn; // 降序
            } else if (sortBy === 'lock') {
                const aLock = parseInt(a.querySelector('[data-key="lockDays"]')?.textContent?.replace(/[天]/g, '') || '0');
                const bLock = parseInt(b.querySelector('[data-key="lockDays"]')?.textContent?.replace(/[天]/g, '') || '0');
                return aLock - bLock; // 升序
            }
            return 0;
        });

        // 重新排列DOM元素
        items.forEach(item => activeContainer.appendChild(item));
    }

    sortByReturn?.addEventListener('click', function() {
        // 更新按钮样式
        sortByReturn.classList.add('bg-blue-500', 'text-white', 'shadow-sm');
        sortByReturn.classList.remove('text-gray-600', 'hover:text-gray-800');
        sortByLock?.classList.remove('bg-blue-500', 'text-white', 'shadow-sm');
        sortByLock?.classList.add('text-gray-600', 'hover:text-gray-800');
        
        sortItems('return');
    });

    sortByLock?.addEventListener('click', function() {
        // 更新按钮样式
        sortByLock.classList.add('bg-blue-500', 'text-white', 'shadow-sm');
        sortByLock.classList.remove('text-gray-600', 'hover:text-gray-800');
        sortByReturn?.classList.remove('bg-blue-500', 'text-white', 'shadow-sm');
        sortByReturn?.classList.add('text-gray-600', 'hover:text-gray-800');
        
        sortItems('lock');
    });

    // 购买金额输入功能
    const buyAmountInput = document.getElementById('buyAmount') as HTMLInputElement;
    
    function updateAmount() {
        const value = buyAmountInput?.value;
        if (!value || value === '') return;
        
        const url = new URL(window.location.href);
        url.searchParams.set('buyAmount', value);
        url.searchParams.set('profit', '0.45');
        window.location.href = url.href;
    }

    buyAmountInput?.addEventListener('blur', updateAmount);
    buyAmountInput?.addEventListener('keydown', function(e) {
        if (e.key === 'Enter') {
            updateAmount();
        }
    });

    // 卡片悬停效果
    document.querySelectorAll('[data-key="gc"]').forEach(card => {
        card.addEventListener('mouseenter', function() {
            this.style.transform = 'translateY(-2px)';
        });
        
        card.addEventListener('mouseleave', function() {
            this.style.transform = 'translateY(0)';
        });
    });
});
</script>